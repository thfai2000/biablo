{"version":3,"file":"game.js","mappings":"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","sources":["webpack://diablo-rpg/./src/client/dungeon-generator.ts","webpack://diablo-rpg/./src/client/player.ts","webpack://diablo-rpg/./src/client/utils.ts","webpack://diablo-rpg/webpack/bootstrap","webpack://diablo-rpg/./src/client/game.ts"],"sourcesContent":["import { GameConfig } from '../types/game-config';\n\ninterface Room {\n  x: number;\n  y: number;\n  w: number;\n  h: number;\n  centerX: number;\n  centerY: number;\n}\n\ninterface Position {\n  x: number;\n  y: number;\n}\n\ninterface DungeonResult {\n  map: number[][];\n  upStairsPos: Position | null;\n  downStairsPos: Position | null;\n}\n\nexport class DungeonGenerator {\n  private config: GameConfig;\n  private level: number;\n  private width: number;\n  private height: number;\n  private minRooms: number;\n  private maxRooms: number;\n  private roomMinSize: number;\n  private roomMaxSize: number;\n  private map: number[][];\n  private rooms: Room[];\n  private upStairsPos: Position | null;\n  private downStairsPos: Position | null;\n  \n  constructor(config: GameConfig, level: number) {\n    this.config = config;\n    this.level = level;\n    this.width = config.map.viewportWidth * 3; // Map larger than viewport\n    this.height = config.map.viewportHeight * 3;\n    this.minRooms = config.map.minRoomsPerFloor;\n    this.maxRooms = config.map.maxRoomsPerFloor;\n    this.roomMinSize = config.map.roomMinSize;\n    this.roomMaxSize = config.map.roomMaxSize;\n    \n    // Tile types: 0=wall, 1=floor, 2=up stairs, 3=down stairs\n    this.map = Array(this.height).fill(0).map(() => Array(this.width).fill(0));\n    this.rooms = [];\n    this.upStairsPos = null;\n    this.downStairsPos = null;\n  }\n  \n  generate(): DungeonResult {\n    // Reset the map\n    this.map = Array(this.height).fill(0).map(() => Array(this.width).fill(0));\n    this.rooms = [];\n    \n    // Generate rooms\n    const numRooms = this.randomInt(this.minRooms, this.maxRooms);\n    \n    for (let i = 0; i < numRooms; i++) {\n      // Random room size\n      const w = this.randomInt(this.roomMinSize, this.roomMaxSize);\n      const h = this.randomInt(this.roomMinSize, this.roomMaxSize);\n      \n      // Random room position\n      const x = this.randomInt(1, this.width - w - 1);\n      const y = this.randomInt(1, this.height - h - 1);\n      \n      const newRoom: Room = {\n        x, y, w, h,\n        centerX: Math.floor(x + w / 2),\n        centerY: Math.floor(y + h / 2)\n      };\n      \n      // Check if this room intersects with any existing room\n      let intersects = false;\n      for (const room of this.rooms) {\n        if (this._roomsIntersect(newRoom, room)) {\n          intersects = true;\n          break;\n        }\n      }\n      \n      if (!intersects) {\n        // Room doesn't intersect, so carve it out\n        this._createRoom(newRoom);\n        \n        // Connect to previous room except for the first one\n        if (this.rooms.length > 0) {\n          const prevRoom = this.rooms[this.rooms.length - 1];\n          this._createCorridor(prevRoom, newRoom);\n        }\n        \n        this.rooms.push(newRoom);\n      }\n    }\n    \n    // Ensure all rooms are connected\n    for (let i = 0; i < this.rooms.length - 1; i++) {\n      this._createCorridor(this.rooms[i], this.rooms[i + 1]);\n    }\n    \n    // Add stairs - up stairs in first room, down stairs in last room\n    if (this.level > 0) { // No up stairs in village\n      this.upStairsPos = {\n        x: this.rooms[0].centerX,\n        y: this.rooms[0].centerY\n      };\n      this.map[this.upStairsPos.y][this.upStairsPos.x] = 2; // Up stairs\n    }\n    \n    if (this.level < this.config.world.totalDungeonFloors) { // No down stairs on last level\n      this.downStairsPos = {\n        x: this.rooms[this.rooms.length - 1].centerX,\n        y: this.rooms[this.rooms.length - 1].centerY\n      };\n      this.map[this.downStairsPos.y][this.downStairsPos.x] = 3; // Down stairs\n    }\n    \n    return {\n      map: this.map,\n      upStairsPos: this.upStairsPos,\n      downStairsPos: this.downStairsPos\n    };\n  }\n  \n  private _createRoom(room: Room): void {\n    for (let y = room.y; y < room.y + room.h; y++) {\n      for (let x = room.x; x < room.x + room.w; x++) {\n        this.map[y][x] = 1; // Floor\n      }\n    }\n  }\n  \n  private _createCorridor(roomA: Room, roomB: Room): void {\n    // Create an L-shaped corridor between two rooms\n    const startX = roomA.centerX;\n    const startY = roomA.centerY;\n    const endX = roomB.centerX;\n    const endY = roomB.centerY;\n    \n    // First go horizontally then vertically\n    this._drawHorizontalCorridor(startX, endX, startY);\n    this._drawVerticalCorridor(startY, endY, endX);\n  }\n  \n  private _drawHorizontalCorridor(startX: number, endX: number, y: number): void {\n    const start = Math.min(startX, endX);\n    const end = Math.max(startX, endX);\n    \n    for (let x = start; x <= end; x++) {\n      this.map[y][x] = 1; // Floor\n      // Add width to corridor\n      for (let i = 1; i <= this.config.map.corridorWidth / 2; i++) {\n        if (y - i >= 0) this.map[y - i][x] = 1;\n        if (y + i < this.height) this.map[y + i][x] = 1;\n      }\n    }\n  }\n  \n  private _drawVerticalCorridor(startY: number, endY: number, x: number): void {\n    const start = Math.min(startY, endY);\n    const end = Math.max(startY, endY);\n    \n    for (let y = start; y <= end; y++) {\n      this.map[y][x] = 1; // Floor\n      // Add width to corridor\n      for (let i = 1; i <= this.config.map.corridorWidth / 2; i++) {\n        if (x - i >= 0) this.map[y][x - i] = 1;\n        if (x + i < this.width) this.map[y][x + i] = 1;\n      }\n    }\n  }\n  \n  private _roomsIntersect(a: Room, b: Room): boolean {\n    // Check if two rooms intersect, including a buffer\n    const buffer = 2; // Minimum space between rooms\n    return (\n      a.x - buffer < b.x + b.w + buffer &&\n      a.x + a.w + buffer > b.x - buffer &&\n      a.y - buffer < b.y + b.h + buffer &&\n      a.y + a.h + buffer > b.y - buffer\n    );\n  }\n  \n  // Special generator for the village (level 0)\n  generateVillage(): DungeonResult {\n    // Create a more open space for the village\n    for (let y = 5; y < this.height - 5; y++) {\n      for (let x = 5; x < this.width - 5; x++) {\n        // Create a circular village\n        const centerX = this.width / 2;\n        const centerY = this.height / 2;\n        const distance = Math.sqrt((x - centerX) ** 2 + (y - centerY) ** 2);\n        \n        if (distance < this.width / 3) {\n          this.map[y][x] = 1; // Floor\n        }\n      }\n    }\n    \n    // Add the dungeon entrance (cave) near the edge\n    const caveX = Math.floor(this.width / 2);\n    const caveY = Math.floor(this.height * 0.8);\n    \n    for (let y = caveY - 2; y <= caveY + 2; y++) {\n      for (let x = caveX - 3; x <= caveX + 3; x++) {\n        if (y >= 0 && y < this.height && x >= 0 && x < this.width) {\n          this.map[y][x] = 1; // Floor\n        }\n      }\n    }\n    \n    // Add the down stairs (dungeon entrance)\n    this.downStairsPos = { x: caveX, y: caveY };\n    this.map[caveY][caveX] = 3; // Down stairs\n    \n    return {\n      map: this.map,\n      upStairsPos: null,\n      downStairsPos: this.downStairsPos\n    };\n  }\n\n  // Helper methods\n  private randomInt(min: number, max: number): number {\n    return Math.floor(Math.random() * (max - min + 1)) + min;\n  }\n}","import { GameConfig } from '../types/game-config';\nimport { displayMessage } from './utils';\n\ninterface Position {\n  x: number;\n  y: number;\n}\n\ninterface Keys {\n  up: boolean;\n  down: boolean;\n  left: boolean;\n  right: boolean;\n  action: boolean;\n  toggleMap: boolean;\n}\n\ninterface FloorChangeResult {\n  floorChange: boolean;\n  direction?: 'up' | 'down';\n}\n\nexport class Player {\n  private config: any;\n  public x: number;\n  public y: number;\n  public currentFloor: number;\n  private moveSpeed: number;\n  private keys: Keys;\n  private actionCooldown: number;\n  private lastActionTime: number;\n  public showMinimap: boolean;\n  private minimapSize: number;\n  private minimapScale: number;\n\n  constructor(config: GameConfig) {\n    this.config = config.player;\n    this.x = 0;\n    this.y = 0;\n    this.currentFloor = 0;\n    this.moveSpeed = this.config.initialStats.baseSpeed;\n    \n    // Set up keyboard controls\n    this.keys = {\n      up: false,\n      down: false,\n      left: false,\n      right: false,\n      action: false,\n      toggleMap: false\n    };\n    \n    // Add cooldown for action key\n    this.actionCooldown = 1000; // 1 second cooldown\n    this.lastActionTime = 0;\n    \n    // Minimap settings\n    this.showMinimap = true; // Default to showing the minimap\n    this.minimapSize = 150;  // Size of the minimap in pixels\n    this.minimapScale = 0.2; // Scale factor for the minimap\n    \n    this._setupInput();\n  }\n  \n  private _setupInput(): void {\n    document.addEventListener('keydown', (e: KeyboardEvent) => {\n      switch(e.key) {\n        case 'ArrowUp':\n        case 'w':\n          this.keys.up = true;\n          break;\n        case 'ArrowDown':\n        case 's':\n          this.keys.down = true;\n          break;\n        case 'ArrowLeft':\n        case 'a':\n          this.keys.left = true;\n          break;\n        case 'ArrowRight':\n        case 'd':\n          this.keys.right = true;\n          break;\n        case ' ':\n        case 'Enter':\n          this.keys.action = true;\n          break;\n        case 'm': // Add key to toggle minimap\n          this.keys.toggleMap = true;\n          this.toggleMinimap();\n          break;\n      }\n    });\n    \n    document.addEventListener('keyup', (e: KeyboardEvent) => {\n      switch(e.key) {\n        case 'ArrowUp':\n        case 'w':\n          this.keys.up = false;\n          break;\n        case 'ArrowDown':\n        case 's':\n          this.keys.down = false;\n          break;\n        case 'ArrowLeft':\n        case 'a':\n          this.keys.left = false;\n          break;\n        case 'ArrowRight':\n        case 'd':\n          this.keys.right = false;\n          break;\n        case ' ':\n        case 'Enter':\n          this.keys.action = false;\n          break;\n        case 'm':\n          this.keys.toggleMap = false;\n          break;\n      }\n    });\n  }\n  \n  public update(map: number[][], upStairsPos?: Position, downStairsPos?: Position): FloorChangeResult {\n    // Store previous position\n    const oldX = this.x;\n    const oldY = this.y;\n    \n    // Handle movement\n    if (this.keys.up) {\n      this.y -= this.moveSpeed;\n    }\n    if (this.keys.down) {\n      this.y += this.moveSpeed;\n    }\n    if (this.keys.left) {\n      this.x -= this.moveSpeed;\n    }\n    if (this.keys.right) {\n      this.x += this.moveSpeed;\n    }\n    \n    // Get reference to game for tileSize\n    const game = (window as any).game;\n    \n    // Collision detection with walls\n    const tileX = Math.floor(this.x / game.tileSize);\n    const tileY = Math.floor(this.y / game.tileSize);\n    \n    // Ensure player stays on walkable tiles\n    if (tileX < 0 || tileX >= map[0].length || tileY < 0 || tileY >= map.length || map[tileY][tileX] === 0) {\n      // Collision with a wall or out of bounds, revert to previous position\n      this.x = oldX;\n      this.y = oldY;\n    }\n    \n    // Check for stairs interaction with cooldown\n    const currentTime = Date.now();\n    if (this.keys.action && currentTime - this.lastActionTime > this.actionCooldown) {\n      // Handle up stairs\n      if (upStairsPos && tileX === upStairsPos.x && tileY === upStairsPos.y) {\n        this.currentFloor--;\n        this.lastActionTime = currentTime; // Update last action time\n        displayMessage(`Going up to floor ${this.currentFloor}`);\n        return { floorChange: true, direction: 'up' };\n      }\n      \n      // Handle down stairs\n      if (downStairsPos && tileX === downStairsPos.x && tileY === downStairsPos.y) {\n        this.currentFloor++;\n        this.lastActionTime = currentTime; // Update last action time\n        displayMessage(`Going down to floor ${this.currentFloor}`);\n        return { floorChange: true, direction: 'down' };\n      }\n    }\n    \n    return { floorChange: false };\n  }\n  \n  public placeAtStairs(direction: string, upStairsPos?: Position, downStairsPos?: Position): void {\n    const game = (window as any).game;\n    // Place player at the appropriate stairs position after changing floors\n    if (direction === 'up' && downStairsPos) {\n      this.x = downStairsPos.x * game.tileSize;\n      this.y = downStairsPos.y * game.tileSize;\n    } else if (direction === 'down' && upStairsPos) {\n      this.x = upStairsPos.x * game.tileSize;\n      this.y = upStairsPos.y * game.tileSize;\n    }\n  }\n  \n  public toggleMinimap(): void {\n    this.showMinimap = !this.showMinimap;\n    displayMessage(`Minimap ${this.showMinimap ? 'enabled' : 'disabled'}`);\n  }\n  \n  public draw(ctx: CanvasRenderingContext2D, offsetX: number, offsetY: number, map: number[][], upStairsPos?: Position, downStairsPos?: Position): void {\n    const game = (window as any).game;\n\n    // Draw the player\n    ctx.fillStyle = '#ff0000';\n    ctx.beginPath();\n    ctx.arc(\n      this.x - offsetX, \n      this.y - offsetY, \n      game.tileSize / 2, \n      0, \n      Math.PI * 2\n    );\n    ctx.fill();\n    \n    // Try to get map data from game.currentFloor if not provided directly\n    let mapData = map;\n    let upStairsPosition = upStairsPos;\n    let downStairsPosition = downStairsPos;\n    \n    // If map data not provided, try to get it from the game object\n    if (!mapData && game && game.dungeonFloors) {\n      const currentFloorData = game.dungeonFloors[this.currentFloor];\n      if (currentFloorData) {\n        mapData = currentFloorData.map;\n        upStairsPosition = currentFloorData.upStairsPos;\n        downStairsPosition = currentFloorData.downStairsPos;\n      }\n    }\n    \n    // Draw the minimap if map data is available\n    if (mapData) {\n      this.drawMinimap(ctx, mapData, upStairsPosition, downStairsPosition);\n    } else {\n      console.warn('No map data available for minimap rendering');\n    }\n  }\n  \n  private drawMinimap(ctx: CanvasRenderingContext2D, map: number[][], upStairsPos?: Position, downStairsPos?: Position): void {\n    if (!this.showMinimap || !map) return;\n    \n    const game = (window as any).game;\n    \n    // Save the current context state\n    ctx.save();\n    \n    const margin = 10;\n    const mapSize = this.minimapSize;\n    const tileSize = Math.max(2, game.tileSize * this.minimapScale); // Ensure tiles are at least 2px\n    \n    // Position the minimap in the top-right corner\n    const minimapX = ctx.canvas.width - mapSize - margin;\n    const minimapY = margin;\n    \n    // Draw minimap background with higher opacity\n    ctx.fillStyle = 'rgba(0, 0, 0, 0.8)';\n    ctx.fillRect(minimapX, minimapY, mapSize, mapSize);\n    \n    // Calculate scaling to fit the map in the minimap area\n    const mapWidth = map[0].length * tileSize;\n    const mapHeight = map.length * tileSize;\n    const scaleX = mapSize / mapWidth;\n    const scaleY = mapSize / mapHeight;\n    const scale = Math.min(scaleX, scaleY, 1); // Don't scale up, only down if needed\n    \n    // Center the map in the minimap area\n    const scaledWidth = mapWidth * scale;\n    const scaledHeight = mapHeight * scale;\n    const offsetX = minimapX + (mapSize - scaledWidth) / 2;\n    const offsetY = minimapY + (mapSize - scaledHeight) / 2;\n    \n    // Apply scaling\n    ctx.translate(offsetX, offsetY);\n    ctx.scale(scale, scale);\n    \n    // Draw the map tiles\n    for (let y = 0; y < map.length; y++) {\n      for (let x = 0; x < map[y].length; x++) {\n        // Only draw the tile if it's walkable\n        if (map[y][x] === 1) {\n          ctx.fillStyle = 'rgba(150, 150, 150, 0.8)';\n          ctx.fillRect(\n            x * tileSize,\n            y * tileSize,\n            tileSize,\n            tileSize\n          );\n        }\n      }\n    }\n    \n    // Draw stairs on minimap\n    if (upStairsPos) {\n      ctx.fillStyle = 'rgba(0, 255, 0, 1)';\n      ctx.fillRect(\n        upStairsPos.x * tileSize,\n        upStairsPos.y * tileSize,\n        tileSize,\n        tileSize\n      );\n    }\n    \n    if (downStairsPos) {\n      ctx.fillStyle = 'rgba(255, 165, 0, 1)';\n      ctx.fillRect(\n        downStairsPos.x * tileSize,\n        downStairsPos.y * tileSize,\n        tileSize,\n        tileSize\n      );\n    }\n    \n    // Draw player position on minimap\n    const playerTileX = Math.floor(this.x / game.tileSize);\n    const playerTileY = Math.floor(this.y / game.tileSize);\n    \n    ctx.fillStyle = 'rgba(255, 0, 0, 1)';\n    ctx.fillRect(\n      playerTileX * tileSize,\n      playerTileY * tileSize,\n      tileSize,\n      tileSize\n    );\n    \n    // Restore the context state\n    ctx.restore();\n    \n    // Draw border around minimap (after restore to ensure it's not scaled)\n    ctx.strokeStyle = 'white';\n    ctx.lineWidth = 2;\n    ctx.strokeRect(minimapX, minimapY, mapSize, mapSize);\n  }\n}","import { GameConfig } from '../types/game-config';\n\n/**\n * Fetches the game configuration from the server\n */\nexport async function fetchGameConfig(): Promise<GameConfig | null> {\n  try {\n    const response = await fetch('/api/config');\n    if (!response.ok) {\n      throw new Error(`HTTP error! status: ${response.status}`);\n    }\n    return await response.json() as GameConfig;\n  } catch (error) {\n    console.error('Error fetching game config:', error);\n    return null;\n  }\n}\n\n/**\n * Display a message in the message log\n */\nexport function displayMessage(message: string, type: string = 'info'): void {\n  const messageLog = document.getElementById('message-log');\n  if (messageLog) {\n    const messageElement = document.createElement('div');\n    messageElement.classList.add('message', type);\n    messageElement.textContent = message;\n    \n    messageLog.appendChild(messageElement);\n    \n    // Scroll to the bottom\n    messageLog.scrollTop = messageLog.scrollHeight;\n    \n    // Limit the number of messages\n    while (messageLog.childElementCount > 50) {\n      messageLog.removeChild(messageLog.firstChild as Node);\n    }\n  } else {\n    console.log(`[${type}] ${message}`);\n  }\n}\n\n/**\n * Generate a random integer between min and max (inclusive)\n */\nexport function randomInt(min: number, max: number): number {\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n}","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","import { GameConfig } from '../types/game-config';\nimport { Player } from './player';\nimport { DungeonGenerator } from './dungeon-generator';\nimport { fetchGameConfig, displayMessage } from './utils';\n\ninterface Position {\n  x: number;\n  y: number;\n}\n\ninterface FloorData {\n  map: number[][];\n  upStairsPos: Position | null;\n  downStairsPos: Position | null;\n}\n\ninterface Assets {\n  tiles: {\n    wall: string;\n    floor: string;\n    upStairs: string;\n    downStairs: string;\n  };\n}\n\nexport class Game {\n  public canvas: HTMLCanvasElement;\n  private ctx: CanvasRenderingContext2D;\n  public tileSize: number;\n  private config: GameConfig | null;\n  private player: Player | null;\n  private floors: { [key: number]: FloorData };\n  private currentFloor: number;\n  private cameraX: number;\n  private cameraY: number;\n  private lastTime: number;\n  private assets: Assets;\n  \n  constructor() {\n    this.canvas = document.getElementById('game-canvas') as HTMLCanvasElement;\n    this.ctx = this.canvas.getContext('2d')!;\n    this.tileSize = 32;\n    this.config = null;\n    this.player = null;\n    this.floors = {};\n    this.currentFloor = 0;\n    this.cameraX = 0;\n    this.cameraY = 0;\n    this.lastTime = 0;\n    \n    // Assets\n    this.assets = {\n      tiles: {\n        wall: '#333',\n        floor: '#555',\n        upStairs: '#77f',\n        downStairs: '#f77'\n      }\n    };\n    \n    this.init();\n  }\n  \n  async init(): Promise<void> {\n    // Set canvas size\n    this.resizeCanvas();\n    window.addEventListener('resize', () => this.resizeCanvas());\n    \n    // Load game config\n    this.config = await fetchGameConfig();\n    \n    if (!this.config) {\n      displayMessage('Could not load game configuration', 'danger');\n      return;\n    }\n    \n    // Initialize player\n    this.player = new Player(this.config);\n    \n    // Generate the initial floor (village)\n    this.generateFloor(0);\n    \n    // Start in the village\n    this.currentFloor = 0;\n    const startPos = this.getStartingPosition(0);\n    if (this.player && startPos) {\n      this.player.x = startPos.x * this.tileSize;\n      this.player.y = startPos.y * this.tileSize;\n    }\n    \n    displayMessage('Welcome to the village! Find the cave to enter the dungeon.', 'info');\n    \n    // Start game loop\n    requestAnimationFrame((time) => this.gameLoop(time));\n  }\n  \n  generateFloor(level: number): void {\n    if (this.floors[level]) {\n      return; // Floor already generated\n    }\n    \n    if (!this.config) return;\n    \n    const generator = new DungeonGenerator(this.config, level);\n    \n    if (level === 0) {\n      // Generate village\n      this.floors[level] = generator.generateVillage();\n    } else {\n      // Generate dungeon floor\n      this.floors[level] = generator.generate();\n    }\n    \n    displayMessage(`Generated floor ${level}`, 'info');\n  }\n  \n  getStartingPosition(level: number): Position | null {\n    const floor = this.floors[level];\n    if (!floor || !floor.map) return null;\n    \n    // Find a suitable starting position on the floor\n    if (level === 0) {\n      // Start in center of village\n      const map = floor.map;\n      return {\n        x: Math.floor(map[0].length / 2),\n        y: Math.floor(map.length / 2)\n      };\n    } else {\n      // Start at up stairs for dungeon floors\n      return floor.upStairsPos || {\n        x: Math.floor(floor.map[0].length / 2),\n        y: Math.floor(floor.map.length / 2)\n      };\n    }\n  }\n  \n  resizeCanvas(): void {\n    this.canvas.width = window.innerWidth;\n    this.canvas.height = window.innerHeight * 0.9; // 90% of window height\n  }\n  \n  updateCamera(): void {\n    if (!this.player) return;\n    \n    // Calculate the camera position to follow the player\n    const viewportWidth = this.canvas.width;\n    const viewportHeight = this.canvas.height;\n    \n    // Center the camera on the player\n    this.cameraX = this.player.x - viewportWidth / 2;\n    this.cameraY = this.player.y - viewportHeight / 2;\n    \n    // Limit camera to map boundaries\n    const currentMap = this.floors[this.currentFloor]?.map;\n    if (!currentMap) return;\n    \n    const mapWidth = currentMap[0].length * this.tileSize;\n    const mapHeight = currentMap.length * this.tileSize;\n    \n    this.cameraX = Math.max(0, Math.min(this.cameraX, mapWidth - viewportWidth));\n    this.cameraY = Math.max(0, Math.min(this.cameraY, mapHeight - viewportHeight));\n  }\n  \n  gameLoop(currentTime: number): void {\n    // Calculate delta time\n    const deltaTime = (currentTime - this.lastTime) / 1000; // in seconds\n    this.lastTime = currentTime;\n    \n    // Make sure the current floor is generated\n    if (!this.floors[this.currentFloor]) {\n      this.generateFloor(this.currentFloor);\n    }\n    \n    // Get floor data\n    const floorData = this.floors[this.currentFloor];\n    if (!floorData || !this.player) {\n      requestAnimationFrame((time) => this.gameLoop(time));\n      return;\n    }\n    \n    const { map, upStairsPos, downStairsPos } = floorData;\n    \n    // Update player - convert null to undefined for the stairs positions\n    const result = this.player.update(map, upStairsPos || undefined, downStairsPos || undefined);\n    \n    // Handle floor changes\n    if (result.floorChange) {\n      this.currentFloor = this.player.currentFloor;\n      \n      // Make sure the floor is generated\n      if (!this.floors[this.currentFloor]) {\n        this.generateFloor(this.currentFloor);\n      }\n      \n      const currentFloor = this.floors[this.currentFloor];\n      if (currentFloor && result.direction) {\n        // Place player at appropriate stairs\n        this.player.placeAtStairs(\n          result.direction, \n          currentFloor.upStairsPos || undefined, \n          currentFloor.downStairsPos || undefined\n        );\n      }\n    }\n    \n    // Update camera\n    this.updateCamera();\n    \n    // Render the game\n    this.render();\n    \n    // Continue the game loop\n    requestAnimationFrame((time) => this.gameLoop(time));\n  }\n  \n  render(): void {\n    // Clear canvas\n    this.ctx.fillStyle = '#000';\n    this.ctx.fillRect(0, 0, this.canvas.width, this.canvas.height);\n    \n    // Get current map\n    const floorData = this.floors[this.currentFloor];\n    if (!floorData || !floorData.map || !this.player) return;\n    \n    const { map, upStairsPos, downStairsPos } = floorData;\n    \n    // Calculate visible tile range based on camera position\n    const startCol = Math.floor(this.cameraX / this.tileSize);\n    const endCol = Math.min(\n      map[0].length, \n      startCol + Math.ceil(this.canvas.width / this.tileSize) + 1\n    );\n    \n    const startRow = Math.floor(this.cameraY / this.tileSize);\n    const endRow = Math.min(\n      map.length, \n      startRow + Math.ceil(this.canvas.height / this.tileSize) + 1\n    );\n    \n    // Draw the map\n    for (let y = startRow; y < endRow; y++) {\n      for (let x = startCol; x < endCol; x++) {\n        const tileType = map[y][x];\n        \n        switch (tileType) {\n          case 0: // Wall\n            this.ctx.fillStyle = this.assets.tiles.wall;\n            break;\n          case 1: // Floor\n            this.ctx.fillStyle = this.assets.tiles.floor;\n            break;\n          case 2: // Up stairs\n            this.ctx.fillStyle = this.assets.tiles.upStairs;\n            break;\n          case 3: // Down stairs\n            this.ctx.fillStyle = this.assets.tiles.downStairs;\n            break;\n        }\n        \n        this.ctx.fillRect(\n          x * this.tileSize - this.cameraX,\n          y * this.tileSize - this.cameraY,\n          this.tileSize,\n          this.tileSize\n        );\n      }\n    }\n    \n    // Draw the player\n    this.player.draw(this.ctx, this.cameraX, this.cameraY, map, upStairsPos || undefined, downStairsPos || undefined);\n    \n    // Draw UI\n    this.ctx.fillStyle = '#fff';\n    this.ctx.font = '16px Arial';\n    this.ctx.fillText(`Floor: ${this.currentFloor}`, 10, 20);\n    \n    // Draw instructions\n    this.ctx.fillText('Use arrow keys or WASD to move', 10, 40);\n    this.ctx.fillText('Press Space or Enter at stairs to change floors', 10, 60);\n  }\n}\n\n// Initialize game when the page loads\nwindow.addEventListener('load', () => {\n  (window as any).game = new Game();\n});"],"names":[],"sourceRoot":""}