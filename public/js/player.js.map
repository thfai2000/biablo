{"version":3,"file":"player.js","mappings":";;;;;;;;;;;;AAKA,0CAWC;AAKD,wCAmBC;AAKD,8BAEC;AA7CD;;GAEG;AACI,KAAK,UAAU,eAAe;IACnC,IAAI,CAAC;QACH,MAAM,QAAQ,GAAG,MAAM,KAAK,CAAC,aAAa,CAAC,CAAC;QAC5C,IAAI,CAAC,QAAQ,CAAC,EAAE,EAAE,CAAC;YACjB,MAAM,IAAI,KAAK,CAAC,uBAAuB,QAAQ,CAAC,MAAM,EAAE,CAAC,CAAC;QAC5D,CAAC;QACD,OAAO,MAAM,QAAQ,CAAC,IAAI,EAAgB,CAAC;IAC7C,CAAC;IAAC,OAAO,KAAK,EAAE,CAAC;QACf,OAAO,CAAC,KAAK,CAAC,6BAA6B,EAAE,KAAK,CAAC,CAAC;QACpD,OAAO,IAAI,CAAC;IACd,CAAC;AACH,CAAC;AAED;;GAEG;AACH,SAAgB,cAAc,CAAC,OAAe,EAAE,OAAe,MAAM;IACnE,MAAM,UAAU,GAAG,QAAQ,CAAC,cAAc,CAAC,aAAa,CAAC,CAAC;IAC1D,IAAI,UAAU,EAAE,CAAC;QACf,MAAM,cAAc,GAAG,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;QACrD,cAAc,CAAC,SAAS,CAAC,GAAG,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;QAC9C,cAAc,CAAC,WAAW,GAAG,OAAO,CAAC;QAErC,UAAU,CAAC,WAAW,CAAC,cAAc,CAAC,CAAC;QAEvC,uBAAuB;QACvB,UAAU,CAAC,SAAS,GAAG,UAAU,CAAC,YAAY,CAAC;QAE/C,+BAA+B;QAC/B,OAAO,UAAU,CAAC,iBAAiB,GAAG,EAAE,EAAE,CAAC;YACzC,UAAU,CAAC,WAAW,CAAC,UAAU,CAAC,UAAkB,CAAC,CAAC;QACxD,CAAC;IACH,CAAC;SAAM,CAAC;QACN,OAAO,CAAC,GAAG,CAAC,IAAI,IAAI,KAAK,OAAO,EAAE,CAAC,CAAC;IACtC,CAAC;AACH,CAAC;AAED;;GAEG;AACH,SAAgB,SAAS,CAAC,GAAW,EAAE,GAAW;IAChD,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC;AAC3D,CAAC;;;;;;;UC/CD;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;;;;;;;;;ACrBA,4EAAyC;AAqBzC,MAAa,MAAM;IAajB,YAAY,MAAkB;QAC5B,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC;QAC5B,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;QACX,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;QACX,IAAI,CAAC,YAAY,GAAG,CAAC,CAAC;QACtB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,SAAS,CAAC;QAEpD,2BAA2B;QAC3B,IAAI,CAAC,IAAI,GAAG;YACV,EAAE,EAAE,KAAK;YACT,IAAI,EAAE,KAAK;YACX,IAAI,EAAE,KAAK;YACX,KAAK,EAAE,KAAK;YACZ,MAAM,EAAE,KAAK;YACb,SAAS,EAAE,KAAK;SACjB,CAAC;QAEF,8BAA8B;QAC9B,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,CAAC,oBAAoB;QAChD,IAAI,CAAC,cAAc,GAAG,CAAC,CAAC;QAExB,mBAAmB;QACnB,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,CAAC,iCAAiC;QAC1D,IAAI,CAAC,WAAW,GAAG,GAAG,CAAC,CAAE,gCAAgC;QACzD,IAAI,CAAC,YAAY,GAAG,GAAG,CAAC,CAAC,+BAA+B;QAExD,IAAI,CAAC,WAAW,EAAE,CAAC;IACrB,CAAC;IAEO,WAAW;QACjB,QAAQ,CAAC,gBAAgB,CAAC,SAAS,EAAE,CAAC,CAAgB,EAAE,EAAE;YACxD,QAAO,CAAC,CAAC,GAAG,EAAE,CAAC;gBACb,KAAK,SAAS,CAAC;gBACf,KAAK,GAAG;oBACN,IAAI,CAAC,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC;oBACpB,MAAM;gBACR,KAAK,WAAW,CAAC;gBACjB,KAAK,GAAG;oBACN,IAAI,CAAC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;oBACtB,MAAM;gBACR,KAAK,WAAW,CAAC;gBACjB,KAAK,GAAG;oBACN,IAAI,CAAC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;oBACtB,MAAM;gBACR,KAAK,YAAY,CAAC;gBAClB,KAAK,GAAG;oBACN,IAAI,CAAC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;oBACvB,MAAM;gBACR,KAAK,GAAG,CAAC;gBACT,KAAK,OAAO;oBACV,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;oBACxB,MAAM;gBACR,KAAK,GAAG,EAAE,4BAA4B;oBACpC,IAAI,CAAC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;oBAC3B,IAAI,CAAC,aAAa,EAAE,CAAC;oBACrB,MAAM;YACV,CAAC;QACH,CAAC,CAAC,CAAC;QAEH,QAAQ,CAAC,gBAAgB,CAAC,OAAO,EAAE,CAAC,CAAgB,EAAE,EAAE;YACtD,QAAO,CAAC,CAAC,GAAG,EAAE,CAAC;gBACb,KAAK,SAAS,CAAC;gBACf,KAAK,GAAG;oBACN,IAAI,CAAC,IAAI,CAAC,EAAE,GAAG,KAAK,CAAC;oBACrB,MAAM;gBACR,KAAK,WAAW,CAAC;gBACjB,KAAK,GAAG;oBACN,IAAI,CAAC,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC;oBACvB,MAAM;gBACR,KAAK,WAAW,CAAC;gBACjB,KAAK,GAAG;oBACN,IAAI,CAAC,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC;oBACvB,MAAM;gBACR,KAAK,YAAY,CAAC;gBAClB,KAAK,GAAG;oBACN,IAAI,CAAC,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;oBACxB,MAAM;gBACR,KAAK,GAAG,CAAC;gBACT,KAAK,OAAO;oBACV,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;oBACzB,MAAM;gBACR,KAAK,GAAG;oBACN,IAAI,CAAC,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;oBAC5B,MAAM;YACV,CAAC;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAEM,MAAM,CAAC,GAAe,EAAE,WAAsB,EAAE,aAAwB;QAC7E,0BAA0B;QAC1B,MAAM,IAAI,GAAG,IAAI,CAAC,CAAC,CAAC;QACpB,MAAM,IAAI,GAAG,IAAI,CAAC,CAAC,CAAC;QAEpB,kBAAkB;QAClB,IAAI,IAAI,CAAC,IAAI,CAAC,EAAE,EAAE,CAAC;YACjB,IAAI,CAAC,CAAC,IAAI,IAAI,CAAC,SAAS,CAAC;QAC3B,CAAC;QACD,IAAI,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC;YACnB,IAAI,CAAC,CAAC,IAAI,IAAI,CAAC,SAAS,CAAC;QAC3B,CAAC;QACD,IAAI,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC;YACnB,IAAI,CAAC,CAAC,IAAI,IAAI,CAAC,SAAS,CAAC;QAC3B,CAAC;QACD,IAAI,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC;YACpB,IAAI,CAAC,CAAC,IAAI,IAAI,CAAC,SAAS,CAAC;QAC3B,CAAC;QAED,qCAAqC;QACrC,MAAM,IAAI,GAAI,MAAc,CAAC,IAAI,CAAC;QAElC,iCAAiC;QACjC,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC;QACjD,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC;QAEjD,wCAAwC;QACxC,IAAI,KAAK,GAAG,CAAC,IAAI,KAAK,IAAI,GAAG,CAAC,CAAC,CAAC,CAAC,MAAM,IAAI,KAAK,GAAG,CAAC,IAAI,KAAK,IAAI,GAAG,CAAC,MAAM,IAAI,GAAG,CAAC,KAAK,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,EAAE,CAAC;YACvG,sEAAsE;YACtE,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC;YACd,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC;QAChB,CAAC;QAED,6CAA6C;QAC7C,MAAM,WAAW,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;QAC/B,IAAI,IAAI,CAAC,IAAI,CAAC,MAAM,IAAI,WAAW,GAAG,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,cAAc,EAAE,CAAC;YAChF,mBAAmB;YACnB,IAAI,WAAW,IAAI,KAAK,KAAK,WAAW,CAAC,CAAC,IAAI,KAAK,KAAK,WAAW,CAAC,CAAC,EAAE,CAAC;gBACtE,IAAI,CAAC,YAAY,EAAE,CAAC;gBACpB,IAAI,CAAC,cAAc,GAAG,WAAW,CAAC,CAAC,0BAA0B;gBAC7D,0BAAc,EAAC,qBAAqB,IAAI,CAAC,YAAY,EAAE,CAAC,CAAC;gBACzD,OAAO,EAAE,WAAW,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC;YAChD,CAAC;YAED,qBAAqB;YACrB,IAAI,aAAa,IAAI,KAAK,KAAK,aAAa,CAAC,CAAC,IAAI,KAAK,KAAK,aAAa,CAAC,CAAC,EAAE,CAAC;gBAC5E,IAAI,CAAC,YAAY,EAAE,CAAC;gBACpB,IAAI,CAAC,cAAc,GAAG,WAAW,CAAC,CAAC,0BAA0B;gBAC7D,0BAAc,EAAC,uBAAuB,IAAI,CAAC,YAAY,EAAE,CAAC,CAAC;gBAC3D,OAAO,EAAE,WAAW,EAAE,IAAI,EAAE,SAAS,EAAE,MAAM,EAAE,CAAC;YAClD,CAAC;QACH,CAAC;QAED,OAAO,EAAE,WAAW,EAAE,KAAK,EAAE,CAAC;IAChC,CAAC;IAEM,aAAa,CAAC,SAAiB,EAAE,WAAsB,EAAE,aAAwB;QACtF,MAAM,IAAI,GAAI,MAAc,CAAC,IAAI,CAAC;QAClC,wEAAwE;QACxE,IAAI,SAAS,KAAK,IAAI,IAAI,aAAa,EAAE,CAAC;YACxC,IAAI,CAAC,CAAC,GAAG,aAAa,CAAC,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC;YACzC,IAAI,CAAC,CAAC,GAAG,aAAa,CAAC,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC;QAC3C,CAAC;aAAM,IAAI,SAAS,KAAK,MAAM,IAAI,WAAW,EAAE,CAAC;YAC/C,IAAI,CAAC,CAAC,GAAG,WAAW,CAAC,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC;YACvC,IAAI,CAAC,CAAC,GAAG,WAAW,CAAC,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC;QACzC,CAAC;IACH,CAAC;IAEM,aAAa;QAClB,IAAI,CAAC,WAAW,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC;QACrC,0BAAc,EAAC,WAAW,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,UAAU,EAAE,CAAC,CAAC;IACzE,CAAC;IAEM,IAAI,CAAC,GAA6B,EAAE,OAAe,EAAE,OAAe,EAAE,GAAe,EAAE,WAAsB,EAAE,aAAwB;QAC5I,MAAM,IAAI,GAAI,MAAc,CAAC,IAAI,CAAC;QAElC,kBAAkB;QAClB,GAAG,CAAC,SAAS,GAAG,SAAS,CAAC;QAC1B,GAAG,CAAC,SAAS,EAAE,CAAC;QAChB,GAAG,CAAC,GAAG,CACL,IAAI,CAAC,CAAC,GAAG,OAAO,EAChB,IAAI,CAAC,CAAC,GAAG,OAAO,EAChB,IAAI,CAAC,QAAQ,GAAG,CAAC,EACjB,CAAC,EACD,IAAI,CAAC,EAAE,GAAG,CAAC,CACZ,CAAC;QACF,GAAG,CAAC,IAAI,EAAE,CAAC;QAEX,sEAAsE;QACtE,IAAI,OAAO,GAAG,GAAG,CAAC;QAClB,IAAI,gBAAgB,GAAG,WAAW,CAAC;QACnC,IAAI,kBAAkB,GAAG,aAAa,CAAC;QAEvC,+DAA+D;QAC/D,IAAI,CAAC,OAAO,IAAI,IAAI,IAAI,IAAI,CAAC,aAAa,EAAE,CAAC;YAC3C,MAAM,gBAAgB,GAAG,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;YAC/D,IAAI,gBAAgB,EAAE,CAAC;gBACrB,OAAO,GAAG,gBAAgB,CAAC,GAAG,CAAC;gBAC/B,gBAAgB,GAAG,gBAAgB,CAAC,WAAW,CAAC;gBAChD,kBAAkB,GAAG,gBAAgB,CAAC,aAAa,CAAC;YACtD,CAAC;QACH,CAAC;QAED,4CAA4C;QAC5C,IAAI,OAAO,EAAE,CAAC;YACZ,IAAI,CAAC,WAAW,CAAC,GAAG,EAAE,OAAO,EAAE,gBAAgB,EAAE,kBAAkB,CAAC,CAAC;QACvE,CAAC;aAAM,CAAC;YACN,OAAO,CAAC,IAAI,CAAC,6CAA6C,CAAC,CAAC;QAC9D,CAAC;IACH,CAAC;IAEO,WAAW,CAAC,GAA6B,EAAE,GAAe,EAAE,WAAsB,EAAE,aAAwB;QAClH,IAAI,CAAC,IAAI,CAAC,WAAW,IAAI,CAAC,GAAG;YAAE,OAAO;QAEtC,MAAM,IAAI,GAAI,MAAc,CAAC,IAAI,CAAC;QAElC,iCAAiC;QACjC,GAAG,CAAC,IAAI,EAAE,CAAC;QAEX,MAAM,MAAM,GAAG,EAAE,CAAC;QAClB,MAAM,OAAO,GAAG,IAAI,CAAC,WAAW,CAAC;QACjC,MAAM,QAAQ,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,gCAAgC;QAEjG,+CAA+C;QAC/C,MAAM,QAAQ,GAAG,GAAG,CAAC,MAAM,CAAC,KAAK,GAAG,OAAO,GAAG,MAAM,CAAC;QACrD,MAAM,QAAQ,GAAG,MAAM,CAAC;QAExB,8CAA8C;QAC9C,GAAG,CAAC,SAAS,GAAG,oBAAoB,CAAC;QACrC,GAAG,CAAC,QAAQ,CAAC,QAAQ,EAAE,QAAQ,EAAE,OAAO,EAAE,OAAO,CAAC,CAAC;QAEnD,uDAAuD;QACvD,MAAM,QAAQ,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;QAC1C,MAAM,SAAS,GAAG,GAAG,CAAC,MAAM,GAAG,QAAQ,CAAC;QACxC,MAAM,MAAM,GAAG,OAAO,GAAG,QAAQ,CAAC;QAClC,MAAM,MAAM,GAAG,OAAO,GAAG,SAAS,CAAC;QACnC,MAAM,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,MAAM,EAAE,MAAM,EAAE,CAAC,CAAC,CAAC,CAAC,sCAAsC;QAEjF,qCAAqC;QACrC,MAAM,WAAW,GAAG,QAAQ,GAAG,KAAK,CAAC;QACrC,MAAM,YAAY,GAAG,SAAS,GAAG,KAAK,CAAC;QACvC,MAAM,OAAO,GAAG,QAAQ,GAAG,CAAC,OAAO,GAAG,WAAW,CAAC,GAAG,CAAC,CAAC;QACvD,MAAM,OAAO,GAAG,QAAQ,GAAG,CAAC,OAAO,GAAG,YAAY,CAAC,GAAG,CAAC,CAAC;QAExD,gBAAgB;QAChB,GAAG,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC;QAChC,GAAG,CAAC,KAAK,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;QAExB,qBAAqB;QACrB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;YACpC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;gBACvC,sCAAsC;gBACtC,IAAI,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,EAAE,CAAC;oBACpB,GAAG,CAAC,SAAS,GAAG,0BAA0B,CAAC;oBAC3C,GAAG,CAAC,QAAQ,CACV,CAAC,GAAG,QAAQ,EACZ,CAAC,GAAG,QAAQ,EACZ,QAAQ,EACR,QAAQ,CACT,CAAC;gBACJ,CAAC;YACH,CAAC;QACH,CAAC;QAED,yBAAyB;QACzB,IAAI,WAAW,EAAE,CAAC;YAChB,GAAG,CAAC,SAAS,GAAG,oBAAoB,CAAC;YACrC,GAAG,CAAC,QAAQ,CACV,WAAW,CAAC,CAAC,GAAG,QAAQ,EACxB,WAAW,CAAC,CAAC,GAAG,QAAQ,EACxB,QAAQ,EACR,QAAQ,CACT,CAAC;QACJ,CAAC;QAED,IAAI,aAAa,EAAE,CAAC;YAClB,GAAG,CAAC,SAAS,GAAG,sBAAsB,CAAC;YACvC,GAAG,CAAC,QAAQ,CACV,aAAa,CAAC,CAAC,GAAG,QAAQ,EAC1B,aAAa,CAAC,CAAC,GAAG,QAAQ,EAC1B,QAAQ,EACR,QAAQ,CACT,CAAC;QACJ,CAAC;QAED,kCAAkC;QAClC,MAAM,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC;QACvD,MAAM,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC;QAEvD,GAAG,CAAC,SAAS,GAAG,oBAAoB,CAAC;QACrC,GAAG,CAAC,QAAQ,CACV,WAAW,GAAG,QAAQ,EACtB,WAAW,GAAG,QAAQ,EACtB,QAAQ,EACR,QAAQ,CACT,CAAC;QAEF,4BAA4B;QAC5B,GAAG,CAAC,OAAO,EAAE,CAAC;QAEd,uEAAuE;QACvE,GAAG,CAAC,WAAW,GAAG,OAAO,CAAC;QAC1B,GAAG,CAAC,SAAS,GAAG,CAAC,CAAC;QAClB,GAAG,CAAC,UAAU,CAAC,QAAQ,EAAE,QAAQ,EAAE,OAAO,EAAE,OAAO,CAAC,CAAC;IACvD,CAAC;CACF;AAlTD,wBAkTC","sources":["webpack://diablo-rpg/./src/client/utils.ts","webpack://diablo-rpg/webpack/bootstrap","webpack://diablo-rpg/./src/client/player.ts"],"sourcesContent":["import { GameConfig } from '../types/game-config';\n\n/**\n * Fetches the game configuration from the server\n */\nexport async function fetchGameConfig(): Promise<GameConfig | null> {\n  try {\n    const response = await fetch('/api/config');\n    if (!response.ok) {\n      throw new Error(`HTTP error! status: ${response.status}`);\n    }\n    return await response.json() as GameConfig;\n  } catch (error) {\n    console.error('Error fetching game config:', error);\n    return null;\n  }\n}\n\n/**\n * Display a message in the message log\n */\nexport function displayMessage(message: string, type: string = 'info'): void {\n  const messageLog = document.getElementById('message-log');\n  if (messageLog) {\n    const messageElement = document.createElement('div');\n    messageElement.classList.add('message', type);\n    messageElement.textContent = message;\n    \n    messageLog.appendChild(messageElement);\n    \n    // Scroll to the bottom\n    messageLog.scrollTop = messageLog.scrollHeight;\n    \n    // Limit the number of messages\n    while (messageLog.childElementCount > 50) {\n      messageLog.removeChild(messageLog.firstChild as Node);\n    }\n  } else {\n    console.log(`[${type}] ${message}`);\n  }\n}\n\n/**\n * Generate a random integer between min and max (inclusive)\n */\nexport function randomInt(min: number, max: number): number {\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n}","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","import { GameConfig } from '../types/game-config';\nimport { displayMessage } from './utils';\n\ninterface Position {\n  x: number;\n  y: number;\n}\n\ninterface Keys {\n  up: boolean;\n  down: boolean;\n  left: boolean;\n  right: boolean;\n  action: boolean;\n  toggleMap: boolean;\n}\n\ninterface FloorChangeResult {\n  floorChange: boolean;\n  direction?: 'up' | 'down';\n}\n\nexport class Player {\n  private config: any;\n  public x: number;\n  public y: number;\n  public currentFloor: number;\n  private moveSpeed: number;\n  private keys: Keys;\n  private actionCooldown: number;\n  private lastActionTime: number;\n  public showMinimap: boolean;\n  private minimapSize: number;\n  private minimapScale: number;\n\n  constructor(config: GameConfig) {\n    this.config = config.player;\n    this.x = 0;\n    this.y = 0;\n    this.currentFloor = 0;\n    this.moveSpeed = this.config.initialStats.baseSpeed;\n    \n    // Set up keyboard controls\n    this.keys = {\n      up: false,\n      down: false,\n      left: false,\n      right: false,\n      action: false,\n      toggleMap: false\n    };\n    \n    // Add cooldown for action key\n    this.actionCooldown = 1000; // 1 second cooldown\n    this.lastActionTime = 0;\n    \n    // Minimap settings\n    this.showMinimap = true; // Default to showing the minimap\n    this.minimapSize = 150;  // Size of the minimap in pixels\n    this.minimapScale = 0.2; // Scale factor for the minimap\n    \n    this._setupInput();\n  }\n  \n  private _setupInput(): void {\n    document.addEventListener('keydown', (e: KeyboardEvent) => {\n      switch(e.key) {\n        case 'ArrowUp':\n        case 'w':\n          this.keys.up = true;\n          break;\n        case 'ArrowDown':\n        case 's':\n          this.keys.down = true;\n          break;\n        case 'ArrowLeft':\n        case 'a':\n          this.keys.left = true;\n          break;\n        case 'ArrowRight':\n        case 'd':\n          this.keys.right = true;\n          break;\n        case ' ':\n        case 'Enter':\n          this.keys.action = true;\n          break;\n        case 'm': // Add key to toggle minimap\n          this.keys.toggleMap = true;\n          this.toggleMinimap();\n          break;\n      }\n    });\n    \n    document.addEventListener('keyup', (e: KeyboardEvent) => {\n      switch(e.key) {\n        case 'ArrowUp':\n        case 'w':\n          this.keys.up = false;\n          break;\n        case 'ArrowDown':\n        case 's':\n          this.keys.down = false;\n          break;\n        case 'ArrowLeft':\n        case 'a':\n          this.keys.left = false;\n          break;\n        case 'ArrowRight':\n        case 'd':\n          this.keys.right = false;\n          break;\n        case ' ':\n        case 'Enter':\n          this.keys.action = false;\n          break;\n        case 'm':\n          this.keys.toggleMap = false;\n          break;\n      }\n    });\n  }\n  \n  public update(map: number[][], upStairsPos?: Position, downStairsPos?: Position): FloorChangeResult {\n    // Store previous position\n    const oldX = this.x;\n    const oldY = this.y;\n    \n    // Handle movement\n    if (this.keys.up) {\n      this.y -= this.moveSpeed;\n    }\n    if (this.keys.down) {\n      this.y += this.moveSpeed;\n    }\n    if (this.keys.left) {\n      this.x -= this.moveSpeed;\n    }\n    if (this.keys.right) {\n      this.x += this.moveSpeed;\n    }\n    \n    // Get reference to game for tileSize\n    const game = (window as any).game;\n    \n    // Collision detection with walls\n    const tileX = Math.floor(this.x / game.tileSize);\n    const tileY = Math.floor(this.y / game.tileSize);\n    \n    // Ensure player stays on walkable tiles\n    if (tileX < 0 || tileX >= map[0].length || tileY < 0 || tileY >= map.length || map[tileY][tileX] === 0) {\n      // Collision with a wall or out of bounds, revert to previous position\n      this.x = oldX;\n      this.y = oldY;\n    }\n    \n    // Check for stairs interaction with cooldown\n    const currentTime = Date.now();\n    if (this.keys.action && currentTime - this.lastActionTime > this.actionCooldown) {\n      // Handle up stairs\n      if (upStairsPos && tileX === upStairsPos.x && tileY === upStairsPos.y) {\n        this.currentFloor--;\n        this.lastActionTime = currentTime; // Update last action time\n        displayMessage(`Going up to floor ${this.currentFloor}`);\n        return { floorChange: true, direction: 'up' };\n      }\n      \n      // Handle down stairs\n      if (downStairsPos && tileX === downStairsPos.x && tileY === downStairsPos.y) {\n        this.currentFloor++;\n        this.lastActionTime = currentTime; // Update last action time\n        displayMessage(`Going down to floor ${this.currentFloor}`);\n        return { floorChange: true, direction: 'down' };\n      }\n    }\n    \n    return { floorChange: false };\n  }\n  \n  public placeAtStairs(direction: string, upStairsPos?: Position, downStairsPos?: Position): void {\n    const game = (window as any).game;\n    // Place player at the appropriate stairs position after changing floors\n    if (direction === 'up' && downStairsPos) {\n      this.x = downStairsPos.x * game.tileSize;\n      this.y = downStairsPos.y * game.tileSize;\n    } else if (direction === 'down' && upStairsPos) {\n      this.x = upStairsPos.x * game.tileSize;\n      this.y = upStairsPos.y * game.tileSize;\n    }\n  }\n  \n  public toggleMinimap(): void {\n    this.showMinimap = !this.showMinimap;\n    displayMessage(`Minimap ${this.showMinimap ? 'enabled' : 'disabled'}`);\n  }\n  \n  public draw(ctx: CanvasRenderingContext2D, offsetX: number, offsetY: number, map: number[][], upStairsPos?: Position, downStairsPos?: Position): void {\n    const game = (window as any).game;\n\n    // Draw the player\n    ctx.fillStyle = '#ff0000';\n    ctx.beginPath();\n    ctx.arc(\n      this.x - offsetX, \n      this.y - offsetY, \n      game.tileSize / 2, \n      0, \n      Math.PI * 2\n    );\n    ctx.fill();\n    \n    // Try to get map data from game.currentFloor if not provided directly\n    let mapData = map;\n    let upStairsPosition = upStairsPos;\n    let downStairsPosition = downStairsPos;\n    \n    // If map data not provided, try to get it from the game object\n    if (!mapData && game && game.dungeonFloors) {\n      const currentFloorData = game.dungeonFloors[this.currentFloor];\n      if (currentFloorData) {\n        mapData = currentFloorData.map;\n        upStairsPosition = currentFloorData.upStairsPos;\n        downStairsPosition = currentFloorData.downStairsPos;\n      }\n    }\n    \n    // Draw the minimap if map data is available\n    if (mapData) {\n      this.drawMinimap(ctx, mapData, upStairsPosition, downStairsPosition);\n    } else {\n      console.warn('No map data available for minimap rendering');\n    }\n  }\n  \n  private drawMinimap(ctx: CanvasRenderingContext2D, map: number[][], upStairsPos?: Position, downStairsPos?: Position): void {\n    if (!this.showMinimap || !map) return;\n    \n    const game = (window as any).game;\n    \n    // Save the current context state\n    ctx.save();\n    \n    const margin = 10;\n    const mapSize = this.minimapSize;\n    const tileSize = Math.max(2, game.tileSize * this.minimapScale); // Ensure tiles are at least 2px\n    \n    // Position the minimap in the top-right corner\n    const minimapX = ctx.canvas.width - mapSize - margin;\n    const minimapY = margin;\n    \n    // Draw minimap background with higher opacity\n    ctx.fillStyle = 'rgba(0, 0, 0, 0.8)';\n    ctx.fillRect(minimapX, minimapY, mapSize, mapSize);\n    \n    // Calculate scaling to fit the map in the minimap area\n    const mapWidth = map[0].length * tileSize;\n    const mapHeight = map.length * tileSize;\n    const scaleX = mapSize / mapWidth;\n    const scaleY = mapSize / mapHeight;\n    const scale = Math.min(scaleX, scaleY, 1); // Don't scale up, only down if needed\n    \n    // Center the map in the minimap area\n    const scaledWidth = mapWidth * scale;\n    const scaledHeight = mapHeight * scale;\n    const offsetX = minimapX + (mapSize - scaledWidth) / 2;\n    const offsetY = minimapY + (mapSize - scaledHeight) / 2;\n    \n    // Apply scaling\n    ctx.translate(offsetX, offsetY);\n    ctx.scale(scale, scale);\n    \n    // Draw the map tiles\n    for (let y = 0; y < map.length; y++) {\n      for (let x = 0; x < map[y].length; x++) {\n        // Only draw the tile if it's walkable\n        if (map[y][x] === 1) {\n          ctx.fillStyle = 'rgba(150, 150, 150, 0.8)';\n          ctx.fillRect(\n            x * tileSize,\n            y * tileSize,\n            tileSize,\n            tileSize\n          );\n        }\n      }\n    }\n    \n    // Draw stairs on minimap\n    if (upStairsPos) {\n      ctx.fillStyle = 'rgba(0, 255, 0, 1)';\n      ctx.fillRect(\n        upStairsPos.x * tileSize,\n        upStairsPos.y * tileSize,\n        tileSize,\n        tileSize\n      );\n    }\n    \n    if (downStairsPos) {\n      ctx.fillStyle = 'rgba(255, 165, 0, 1)';\n      ctx.fillRect(\n        downStairsPos.x * tileSize,\n        downStairsPos.y * tileSize,\n        tileSize,\n        tileSize\n      );\n    }\n    \n    // Draw player position on minimap\n    const playerTileX = Math.floor(this.x / game.tileSize);\n    const playerTileY = Math.floor(this.y / game.tileSize);\n    \n    ctx.fillStyle = 'rgba(255, 0, 0, 1)';\n    ctx.fillRect(\n      playerTileX * tileSize,\n      playerTileY * tileSize,\n      tileSize,\n      tileSize\n    );\n    \n    // Restore the context state\n    ctx.restore();\n    \n    // Draw border around minimap (after restore to ensure it's not scaled)\n    ctx.strokeStyle = 'white';\n    ctx.lineWidth = 2;\n    ctx.strokeRect(minimapX, minimapY, mapSize, mapSize);\n  }\n}"],"names":[],"sourceRoot":""}